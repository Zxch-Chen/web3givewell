{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `__ink_dylint_Storage`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":626,"byte_end":957,"line_start":20,"line_end":27,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub struct SimplifiedAuditor {","highlight_start":5,"highlight_end":35},{"text":"        // Mapping from auditor address to auditor details","highlight_start":1,"highlight_end":59},{"text":"        auditors: Mapping<AccountId, Auditor>,","highlight_start":1,"highlight_end":47},{"text":"        // Initial lock period in days for new auditors","highlight_start":1,"highlight_end":56},{"text":"        initial_lock_days: u32,","highlight_start":1,"highlight_end":32},{"text":"        // Extension lock period in days when reputation increases","highlight_start":1,"highlight_end":67},{"text":"        extension_lock_days: u32,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default`, `ink-as-dependency`, and `std`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `__ink_dylint_Storage` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `__ink_dylint_Storage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct SimplifiedAuditor {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // Mapping from auditor address to auditor details\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        auditors: Mapping<AccountId, Auditor>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        extension_lock_days: u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default`, `ink-as-dependency`, and `std`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `__ink_dylint_Storage` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `__ink_dylint_EventBase`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":146,"byte_end":162,"line_start":7,"line_end":7,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"#[ink::contract]","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"simplified-auditor/src/lib.rs","byte_start":146,"byte_end":162,"line_start":7,"line_end":7,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"#[ink::contract]","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[ink::contract]","def_site_span":{"file_name":"/home/zachchen/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ink_macro-4.3.0/src/lib.rs","byte_start":16522,"byte_end":16590,"line_start":518,"line_end":518,"column_start":1,"column_end":69,"is_primary":false,"text":[{"text":"pub fn contract(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `default`, `ink-as-dependency`, and `std`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `ink::contract` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the attribute macro `ink::contract` may come from an old version of the `ink_macro` crate, try updating your dependency with `cargo update -p ink_macro`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `__ink_dylint_EventBase`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[ink::contract]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default`, `ink-as-dependency`, and `std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `ink::contract` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the attribute macro `ink::contract` may come from an old version of the `ink_macro` crate, try updating your dependency with `cargo update -p ink_macro`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the attribute macro `ink::contract` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `__ink_dylint_Constructor`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":2164,"byte_end":2395,"line_start":80,"line_end":86,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        pub fn new(initial_lock_days: u32, extension_lock_days: u32) -> Self {","highlight_start":9,"highlight_end":79},{"text":"            Self {","highlight_start":1,"highlight_end":19},{"text":"                auditors: Mapping::default(),","highlight_start":1,"highlight_end":46},{"text":"                initial_lock_days,","highlight_start":1,"highlight_end":35},{"text":"                extension_lock_days,","highlight_start":1,"highlight_end":37},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default`, `ink-as-dependency`, and `std`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `__ink_dylint_Constructor` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `__ink_dylint_Constructor`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:80:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn new(initial_lock_days: u32, extension_lock_days: u32) -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                auditors: Mapping::default(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                initial_lock_days,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default`, `ink-as-dependency`, and `std`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `__ink_dylint_Constructor` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1006,"byte_end":1023,"line_start":31,"line_end":31,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct AuditorRegistered {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"requested on the command line with `-D clippy::cast-possible-truncation`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1006,"byte_end":1023,"line_start":31,"line_end":31,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct AuditorRegistered {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":"AuditorRegistered::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:31:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AuditorRegistered {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: requested on the command line with `-D clippy::cast-possible-truncation`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct AuditorRegistered\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1141,"byte_end":1155,"line_start":38,"line_end":38,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct AuditorSlashed {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1141,"byte_end":1155,"line_start":38,"line_end":38,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct AuditorSlashed {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"AuditorSlashed::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:38:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AuditorSlashed {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct AuditorSlashed\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1273,"byte_end":1290,"line_start":45,"line_end":45,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct ReputationUpdated {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1273,"byte_end":1290,"line_start":45,"line_end":45,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct ReputationUpdated {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":"ReputationUpdated::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:45:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct ReputationUpdated {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct ReputationUpdated\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1435,"byte_end":1449,"line_start":53,"line_end":53,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct StakeWithdrawn {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1435,"byte_end":1449,"line_start":53,"line_end":53,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct StakeWithdrawn {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"StakeWithdrawn::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:53:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct StakeWithdrawn {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct StakeWithdrawn\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1006,"byte_end":1023,"line_start":31,"line_end":31,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct AuditorRegistered {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1006,"byte_end":1023,"line_start":31,"line_end":31,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct AuditorRegistered {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":"AuditorRegistered::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:31:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AuditorRegistered {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct AuditorRegistered\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1141,"byte_end":1155,"line_start":38,"line_end":38,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct AuditorSlashed {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1141,"byte_end":1155,"line_start":38,"line_end":38,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct AuditorSlashed {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"AuditorSlashed::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:38:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AuditorSlashed {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct AuditorSlashed\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1273,"byte_end":1290,"line_start":45,"line_end":45,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct ReputationUpdated {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1273,"byte_end":1290,"line_start":45,"line_end":45,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    pub struct ReputationUpdated {","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":"ReputationUpdated::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:45:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct ReputationUpdated {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct ReputationUpdated\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1435,"byte_end":1449,"line_start":53,"line_end":53,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct StakeWithdrawn {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1435,"byte_end":1449,"line_start":53,"line_end":53,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    pub struct StakeWithdrawn {","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"StakeWithdrawn::try_from(#[ink::contract])","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:53:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct StakeWithdrawn {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub struct StakeWithdrawn\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(#[ink::contract])\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":2987,"byte_end":3010,"line_start":103,"line_end":103,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            auditor.stake += amount;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"requested on the command line with `-D clippy::arithmetic-side-effects`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            auditor.stake += amount;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: requested on the command line with `-D clippy::arithmetic-side-effects`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":3205,"byte_end":3251,"line_start":107,"line_end":107,"column_start":37,"column_end":83,"is_primary":true,"text":[{"text":"            let lock_days_in_secs = (self.initial_lock_days as u64) * 24 * 60 * 60;","highlight_start":37,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:107:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let lock_days_in_secs = (self.initial_lock_days as u64) * 24 * 60 * 60;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":3460,"byte_end":3483,"line_start":111,"line_end":111,"column_start":38,"column_end":61,"is_primary":true,"text":[{"text":"                auditor.lock_until = now + lock_days_in_secs;","highlight_start":38,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:111:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                auditor.lock_until = now + lock_days_in_secs;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":4751,"byte_end":4779,"line_start":150,"line_end":150,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            auditor_data.stake -= amount;","highlight_start":13,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:150:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            auditor_data.stake -= amount;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":5915,"byte_end":5943,"line_start":182,"line_end":182,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"                auditor_data.reputation += 1;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:182:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                auditor_data.reputation += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":6032,"byte_end":6080,"line_start":185,"line_end":185,"column_start":46,"column_end":94,"is_primary":true,"text":[{"text":"                let extension_days_in_secs = (self.extension_lock_days as u64) * 24 * 60 * 60;","highlight_start":46,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:185:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let extension_days_in_secs = (self.extension_lock_days as u64) * 24 * 60 * 60;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":6399,"byte_end":6433,"line_start":194,"line_end":194,"column_start":43,"column_end":77,"is_primary":true,"text":[{"text":"                auditor_data.lock_until = base_time + extension_days_in_secs;","highlight_start":43,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:194:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                auditor_data.lock_until = base_time + extension_days_in_secs;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arithmetic operation that can potentially result in unexpected side-effects","code":{"code":"clippy::arithmetic_side_effects","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":7749,"byte_end":7777,"line_start":238,"line_end":238,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            auditor_data.stake -= amount;","highlight_start":13,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: arithmetic operation that can potentially result in unexpected side-effects\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:238:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            auditor_data.stake -= amount;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1756,"byte_end":1773,"line_start":64,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        InsufficientStake,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1756,"byte_end":1773,"line_start":64,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        InsufficientStake,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"InsufficientStake::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:64:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        InsufficientStake,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        InsufficientStake\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1817,"byte_end":1828,"line_start":66,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        StakeLocked,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1817,"byte_end":1828,"line_start":66,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        StakeLocked,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"StakeLocked::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        StakeLocked,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        StakeLocked\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1873,"byte_end":1893,"line_start":68,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        AuditorNotRegistered,","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1873,"byte_end":1893,"line_start":68,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        AuditorNotRegistered,","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"AuditorNotRegistered::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:68:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        AuditorNotRegistered,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        AuditorNotRegistered\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1935,"byte_end":1947,"line_start":70,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        Unauthorized,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1935,"byte_end":1947,"line_start":70,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        Unauthorized,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"Unauthorized::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:70:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Unauthorized,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Unauthorized\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1993,"byte_end":2003,"line_start":72,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        ZeroAmount,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1993,"byte_end":2003,"line_start":72,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        ZeroAmount,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"ZeroAmount::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:72:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ZeroAmount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        ZeroAmount\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1713,"byte_end":1773,"line_start":63,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        /// Insufficient stake to withdraw","highlight_start":9,"highlight_end":43},{"text":"        InsufficientStake,","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1713,"byte_end":1773,"line_start":63,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        /// Insufficient stake to withdraw","highlight_start":9,"highlight_end":43},{"text":"        InsufficientStake,","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"/// Insufficient stake to withdraw\n        InsufficientStake::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:63:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Insufficient stake to withdraw\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        InsufficientStake,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Insufficient stake to withdraw\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        InsufficientStake\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1783,"byte_end":1828,"line_start":65,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        /// Stake is still locked","highlight_start":9,"highlight_end":34},{"text":"        StakeLocked,","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1783,"byte_end":1828,"line_start":65,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        /// Stake is still locked","highlight_start":9,"highlight_end":34},{"text":"        StakeLocked,","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":"/// Stake is still locked\n        StakeLocked::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:65:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Stake is still locked\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        StakeLocked,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Stake is still locked\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        StakeLocked\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1838,"byte_end":1893,"line_start":67,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        /// Auditor not registered","highlight_start":9,"highlight_end":35},{"text":"        AuditorNotRegistered,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1838,"byte_end":1893,"line_start":67,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        /// Auditor not registered","highlight_start":9,"highlight_end":35},{"text":"        AuditorNotRegistered,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"/// Auditor not registered\n        AuditorNotRegistered::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:67:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Auditor not registered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        AuditorNotRegistered,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|____________________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Auditor not registered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        AuditorNotRegistered\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1903,"byte_end":1947,"line_start":69,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        /// Unauthorized caller","highlight_start":9,"highlight_end":32},{"text":"        Unauthorized,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1903,"byte_end":1947,"line_start":69,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        /// Unauthorized caller","highlight_start":9,"highlight_end":32},{"text":"        Unauthorized,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"/// Unauthorized caller\n        Unauthorized::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:69:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Unauthorized caller\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Unauthorized,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|____________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Unauthorized caller\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        Unauthorized\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1957,"byte_end":2003,"line_start":71,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        /// Zero amount not allowed","highlight_start":9,"highlight_end":36},{"text":"        ZeroAmount,","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1957,"byte_end":2003,"line_start":71,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        /// Zero amount not allowed","highlight_start":9,"highlight_end":36},{"text":"        ZeroAmount,","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"/// Zero amount not allowed\n        ZeroAmount::try_from(scale::Encode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:71:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Zero amount not allowed\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ZeroAmount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Zero amount not allowed\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        ZeroAmount\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Encode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1756,"byte_end":1773,"line_start":64,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        InsufficientStake,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1756,"byte_end":1773,"line_start":64,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        InsufficientStake,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"InsufficientStake::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:64:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        InsufficientStake,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        InsufficientStake\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1817,"byte_end":1828,"line_start":66,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        StakeLocked,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1817,"byte_end":1828,"line_start":66,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        StakeLocked,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"StakeLocked::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        StakeLocked,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        StakeLocked\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1873,"byte_end":1893,"line_start":68,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        AuditorNotRegistered,","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1873,"byte_end":1893,"line_start":68,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        AuditorNotRegistered,","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"AuditorNotRegistered::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:68:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        AuditorNotRegistered,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        AuditorNotRegistered\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1935,"byte_end":1947,"line_start":70,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        Unauthorized,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1935,"byte_end":1947,"line_start":70,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        Unauthorized,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"Unauthorized::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:70:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Unauthorized,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Unauthorized\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1993,"byte_end":2003,"line_start":72,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        ZeroAmount,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1993,"byte_end":2003,"line_start":72,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        ZeroAmount,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"ZeroAmount::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:72:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ZeroAmount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        ZeroAmount\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1713,"byte_end":1773,"line_start":63,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        /// Insufficient stake to withdraw","highlight_start":9,"highlight_end":43},{"text":"        InsufficientStake,","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1713,"byte_end":1773,"line_start":63,"line_end":64,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        /// Insufficient stake to withdraw","highlight_start":9,"highlight_end":43},{"text":"        InsufficientStake,","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"/// Insufficient stake to withdraw\n        InsufficientStake::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:63:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Insufficient stake to withdraw\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        InsufficientStake,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Insufficient stake to withdraw\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        InsufficientStake\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1783,"byte_end":1828,"line_start":65,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        /// Stake is still locked","highlight_start":9,"highlight_end":34},{"text":"        StakeLocked,","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1783,"byte_end":1828,"line_start":65,"line_end":66,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        /// Stake is still locked","highlight_start":9,"highlight_end":34},{"text":"        StakeLocked,","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":"/// Stake is still locked\n        StakeLocked::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:65:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Stake is still locked\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        StakeLocked,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Stake is still locked\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        StakeLocked\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1838,"byte_end":1893,"line_start":67,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        /// Auditor not registered","highlight_start":9,"highlight_end":35},{"text":"        AuditorNotRegistered,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1838,"byte_end":1893,"line_start":67,"line_end":68,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        /// Auditor not registered","highlight_start":9,"highlight_end":35},{"text":"        AuditorNotRegistered,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"/// Auditor not registered\n        AuditorNotRegistered::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:67:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Auditor not registered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        AuditorNotRegistered,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|____________________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Auditor not registered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        AuditorNotRegistered\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1903,"byte_end":1947,"line_start":69,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        /// Unauthorized caller","highlight_start":9,"highlight_end":32},{"text":"        Unauthorized,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1903,"byte_end":1947,"line_start":69,"line_end":70,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        /// Unauthorized caller","highlight_start":9,"highlight_end":32},{"text":"        Unauthorized,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"/// Unauthorized caller\n        Unauthorized::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:69:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Unauthorized caller\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Unauthorized,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|____________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Unauthorized caller\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        Unauthorized\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"casting `usize` to `u8` may truncate the value","code":{"code":"clippy::cast_possible_truncation","explanation":null},"level":"error","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1957,"byte_end":2003,"line_start":71,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        /// Zero amount not allowed","highlight_start":9,"highlight_end":36},{"text":"        ZeroAmount,","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"... or use `try_from` and handle the error accordingly","code":null,"level":"help","spans":[{"file_name":"simplified-auditor/src/lib.rs","byte_start":1957,"byte_end":2003,"line_start":71,"line_end":72,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        /// Zero amount not allowed","highlight_start":9,"highlight_end":36},{"text":"        ZeroAmount,","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"/// Zero amount not allowed\n        ZeroAmount::try_from(scale::Decode)","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: casting `usize` to `u8` may truncate the value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msimplified-auditor/src/lib.rs:71:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        /// Zero amount not allowed\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ZeroAmount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ... or use `try_from` and handle the error accordingly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         /// Zero amount not allowed\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        ZeroAmount\u001b[0m\u001b[0m\u001b[38;5;10m::try_from(scale::Decode)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 36 previous errors; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 36 previous errors; 3 warnings emitted\u001b[0m\n\n"}
